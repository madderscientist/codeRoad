`timescale 1ns/1ps
// 12进制时间和24进制时间的转换
module HOURMODE(
    input MODE,         // MODE=0则为24进制，MODE=1则为12进制
    input [3:0] HOUR1,   // 十位 24进制的BCD
    input [3:0] HOUR2,   // 个位 24进制的BCD
    output reg [3:0] HOUR1_AFT,
    output reg [3:0] HOUR2_AFT
);
    wire [7:0] h24 = {HOUR1, HOUR2};
    reg [7:0] h12;
    assign {HOUR1_AFT, HOUR2_AFT} = MODE ? h12 : h24;
    always @(*) begin
        case (h24)
            8'b00000001, 8'b00010011: h12 = 8'b00000001;// 01
            8'b00000010, 8'b00010100: h12 = 8'b00000010;// 02
            8'b00000011, 8'b00010101: h12 = 8'b00000011;// 03
            8'b00000100, 8'b00010110: h12 = 8'b00000100;// 04
            8'b00000101, 8'b00010111: h12 = 8'b00000101;// 05
            8'b00000110, 8'b00011000: h12 = 8'b00000110;// 06
            8'b00000111, 8'b00011001: h12 = 8'b00000111;// 07
            8'b00001000, 8'b00100000: h12 = 8'b00001000;// 08
            8'b00001001, 8'b00100001: h12 = 8'b00001001;// 09
            8'b00010000, 8'b00100010: h12 = 8'b00010000;// 10
            8'b00010001, 8'b00100011: h12 = 8'b00010001;// 11
            9'b00010010, 8'b00000000: h12 = 8'b00010010;// 12
            default: h12 = 8'b00000000;
        endcase
    end
endmodule